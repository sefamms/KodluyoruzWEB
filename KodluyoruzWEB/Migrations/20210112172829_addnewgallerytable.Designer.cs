// <auto-generated />
using System;
using KodluyoruzWEB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KodluyoruzWEB.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20210112172829_addnewgallerytable")]
    partial class addnewgallerytable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KodluyoruzWEB.Data.BookGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("Booksid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Booksid");

                    b.ToTable("BookGallery");
                });

            modelBuilder.Entity("KodluyoruzWEB.Data.Books", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("languageId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPages")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("languageId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("KodluyoruzWEB.Data.Language", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("KodluyoruzWEB.Data.BookGallery", b =>
                {
                    b.HasOne("KodluyoruzWEB.Data.Books", null)
                        .WithMany("bookGalery")
                        .HasForeignKey("Booksid");
                });

            modelBuilder.Entity("KodluyoruzWEB.Data.Books", b =>
                {
                    b.HasOne("KodluyoruzWEB.Data.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("languageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
